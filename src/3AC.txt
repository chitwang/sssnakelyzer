1:	begin_func len
2:			len@list = pop_param;
3:			__t69 = len@list;
4:			__t70 = *(__t69);
5:			return __t70;
6:	end_func

7:	begin_func GrandParent@__init__
8:			self = pop_param;
9:			__t0 = self + 0;
10:			*(__t0) = 0;
11:	end_func

12:	begin_func GrandParent@show
13:			GrandParent@show@num = pop_param;
14:			self = pop_param;
15:			string make .LC1 into var __t1
16:			string print __t1
17:			push_param GrandParent@show@num;
18:			stack_pointer +xxx
19:			call print, 1;
20:			stack_pointer -xxx
21:			none type function call ends
22:			__t2 = self + 0;
23:			__t3 = *(__t2);
24:			push_param __t3;
25:			stack_pointer +xxx
26:			call print, 1;
27:			stack_pointer -xxx
28:			none type function call ends
29:			__t4 = self + 0;
30:			__t5 = *(__t4);
31:			return __t5;
32:	end_func

33:	begin_func Parent@__init__
34:			Parent@__init__@num = pop_param;
35:			self = pop_param;
36:			__t6 = self + 8;
37:			*(__t6) = Parent@__init__@num;
38:			__t7 = self + 0;
39:			*(__t7) = 1;
40:	end_func

41:	begin_func Parent@ret_grand_parent
42:			self = pop_param;
43:			push_param 8;
44:			stack_pointer +xxx
45:			call allocmem, 1;
46:			stack_pointer -xxx
47:			__t8 = return_value;
48:			push_param __t8;
49:			stack_pointer +xxx
50:			call GrandParent@__init__, 1;
51:			stack_pointer -xxx
52:			none type function call ends
53:			Parent@ret_grand_parent@g1 = __t8;
54:			push_param 8;
55:			stack_pointer +xxx
56:			call allocmem, 1;
57:			stack_pointer -xxx
58:			__t9 = return_value;
59:			push_param __t9;
60:			stack_pointer +xxx
61:			call GrandParent@__init__, 1;
62:			stack_pointer -xxx
63:			none type function call ends
64:			Parent@ret_grand_parent@g2 = __t9;
65:			push_param 8;
66:			stack_pointer +xxx
67:			call allocmem, 1;
68:			stack_pointer -xxx
69:			__t10 = return_value;
70:			push_param __t10;
71:			stack_pointer +xxx
72:			call GrandParent@__init__, 1;
73:			stack_pointer -xxx
74:			none type function call ends
75:			Parent@ret_grand_parent@g3 = __t10;
76:			push_param 8;
77:			stack_pointer +xxx
78:			call allocmem, 1;
79:			stack_pointer -xxx
80:			__t11 = return_value;
81:			push_param __t11;
82:			stack_pointer +xxx
83:			call GrandParent@__init__, 1;
84:			stack_pointer -xxx
85:			none type function call ends
86:			Parent@ret_grand_parent@g4 = __t11;
87:			push_param 40;
88:			stack_pointer +xxx
89:			call allocmem, 1;
90:			stack_pointer -xxx
91:			__t12 = return_value;
92:			*(__t12) = 4;
93:			__t13 = __t12 + 8;
94:			*(__t13) = Parent@ret_grand_parent@g1;
95:			__t14 = __t12 + 16;
96:			*(__t14) = Parent@ret_grand_parent@g2;
97:			__t15 = __t12 + 24;
98:			*(__t15) = Parent@ret_grand_parent@g3;
99:			__t16 = __t12 + 32;
100:		*(__t16) = Parent@ret_grand_parent@g4;
101:		return __t12;
102:end_func

103:begin_func Child@__init__
104:		Child@__init__@b = pop_param;
105:		Child@__init__@num = pop_param;
106:		Child@__init__@name = pop_param;
107:		self = pop_param;
108:		__t17 = self + 8;
109:		*(__t17) = Child@__init__@num;
110:		__t18 = self + 16;
111:		*(__t18) = Child@__init__@name;
112:		__t19 = self + 0;
113:		*(__t19) = Child@__init__@b;
114:end_func

115:begin_func Child@ret_parent
116:		self = pop_param;
117:		push_param 16;
118:		stack_pointer +xxx
119:		call allocmem, 1;
120:		stack_pointer -xxx
121:		__t20 = return_value;
122:		push_param __t20;
123:		push_param 1;
124:		stack_pointer +xxx
125:		call Parent@__init__, 2;
126:		stack_pointer -xxx
127:		none type function call ends
128:		Child@ret_parent@p1 = __t20;
129:		push_param 16;
130:		stack_pointer +xxx
131:		call allocmem, 1;
132:		stack_pointer -xxx
133:		__t21 = return_value;
134:		push_param __t21;
135:		push_param 2;
136:		stack_pointer +xxx
137:		call Parent@__init__, 2;
138:		stack_pointer -xxx
139:		none type function call ends
140:		Child@ret_parent@p2 = __t21;
141:		push_param 16;
142:		stack_pointer +xxx
143:		call allocmem, 1;
144:		stack_pointer -xxx
145:		__t22 = return_value;
146:		push_param __t22;
147:		push_param 3;
148:		stack_pointer +xxx
149:		call Parent@__init__, 2;
150:		stack_pointer -xxx
151:		none type function call ends
152:		Child@ret_parent@p3 = __t22;
153:		push_param 16;
154:		stack_pointer +xxx
155:		call allocmem, 1;
156:		stack_pointer -xxx
157:		__t23 = return_value;
158:		push_param __t23;
159:		push_param 4;
160:		stack_pointer +xxx
161:		call Parent@__init__, 2;
162:		stack_pointer -xxx
163:		none type function call ends
164:		Child@ret_parent@p4 = __t23;
165:		push_param 16;
166:		stack_pointer +xxx
167:		call allocmem, 1;
168:		stack_pointer -xxx
169:		__t24 = return_value;
170:		push_param __t24;
171:		push_param 5;
172:		stack_pointer +xxx
173:		call Parent@__init__, 2;
174:		stack_pointer -xxx
175:		none type function call ends
176:		Child@ret_parent@p5 = __t24;
177:		push_param 16;
178:		stack_pointer +xxx
179:		call allocmem, 1;
180:		stack_pointer -xxx
181:		__t25 = return_value;
182:		push_param __t25;
183:		push_param 6;
184:		stack_pointer +xxx
185:		call Parent@__init__, 2;
186:		stack_pointer -xxx
187:		none type function call ends
188:		Child@ret_parent@p6 = __t25;
189:		push_param 16;
190:		stack_pointer +xxx
191:		call allocmem, 1;
192:		stack_pointer -xxx
193:		__t26 = return_value;
194:		push_param __t26;
195:		push_param 7;
196:		stack_pointer +xxx
197:		call Parent@__init__, 2;
198:		stack_pointer -xxx
199:		none type function call ends
200:		Child@ret_parent@p7 = __t26;
201:		push_param 16;
202:		stack_pointer +xxx
203:		call allocmem, 1;
204:		stack_pointer -xxx
205:		__t27 = return_value;
206:		push_param __t27;
207:		push_param 8;
208:		stack_pointer +xxx
209:		call Parent@__init__, 2;
210:		stack_pointer -xxx
211:		none type function call ends
212:		Child@ret_parent@p8 = __t27;
213:		push_param 16;
214:		stack_pointer +xxx
215:		call allocmem, 1;
216:		stack_pointer -xxx
217:		__t28 = return_value;
218:		push_param __t28;
219:		push_param 9;
220:		stack_pointer +xxx
221:		call Parent@__init__, 2;
222:		stack_pointer -xxx
223:		none type function call ends
224:		Child@ret_parent@p9 = __t28;
225:		push_param 16;
226:		stack_pointer +xxx
227:		call allocmem, 1;
228:		stack_pointer -xxx
229:		__t29 = return_value;
230:		push_param __t29;
231:		push_param 10;
232:		stack_pointer +xxx
233:		call Parent@__init__, 2;
234:		stack_pointer -xxx
235:		none type function call ends
236:		Child@ret_parent@p10 = __t29;
237:		push_param 88;
238:		stack_pointer +xxx
239:		call allocmem, 1;
240:		stack_pointer -xxx
241:		__t30 = return_value;
242:		*(__t30) = 10;
243:		__t31 = __t30 + 8;
244:		*(__t31) = Child@ret_parent@p1;
245:		__t32 = __t30 + 16;
246:		*(__t32) = Child@ret_parent@p2;
247:		__t33 = __t30 + 24;
248:		*(__t33) = Child@ret_parent@p3;
249:		__t34 = __t30 + 32;
250:		*(__t34) = Child@ret_parent@p4;
251:		__t35 = __t30 + 40;
252:		*(__t35) = Child@ret_parent@p5;
253:		__t36 = __t30 + 48;
254:		*(__t36) = Child@ret_parent@p6;
255:		__t37 = __t30 + 56;
256:		*(__t37) = Child@ret_parent@p7;
257:		__t38 = __t30 + 64;
258:		*(__t38) = Child@ret_parent@p8;
259:		__t39 = __t30 + 72;
260:		*(__t39) = Child@ret_parent@p9;
261:		__t40 = __t30 + 80;
262:		*(__t40) = Child@ret_parent@p10;
263:		Child@ret_parent@obj = __t30;
264:		return Child@ret_parent@obj;
265:end_func

266:begin_func Child@display
267:		self = pop_param;
268:		__t41 = self + 16;
269:		__t42 = *(__t41);
270:		string print __t42
271:		__t43 = self + 8;
272:		__t44 = *(__t43);
273:		push_param __t44;
274:		stack_pointer +xxx
275:		call print, 1;
276:		stack_pointer -xxx
277:		none type function call ends
278:end_func

279:begin_func main
280:		push_param 24;
281:		stack_pointer +xxx
282:		call allocmem, 1;
283:		stack_pointer -xxx
284:		__t46 = return_value;
285:		push_param __t46;
286:		string make .LC2 into var __t45
287:		push_param __t45;
288:		push_param 100;
289:		push_param 1;
290:		stack_pointer +xxx
291:		call Child@__init__, 4;
292:		stack_pointer -xxx
293:		none type function call ends
294:		main@c = __t46;
295:		push_param 8;
296:		stack_pointer +xxx
297:		call allocmem, 1;
298:		stack_pointer -xxx
299:		__t47 = return_value;
300:		push_param __t47;
301:		stack_pointer +xxx
302:		call GrandParent@__init__, 1;
303:		stack_pointer -xxx
304:		none type function call ends
305:		main@obj = __t47;
306:		push_param main@c;
307:		stack_pointer +xxx
308:		call Child@ret_parent, 1;
309:		stack_pointer -xxx
310:		__t48 = return_value;
311:		__t49 = __t48;
312:		__t50 = *(__t49);
313:		__t51 = 3 >= __t50;
314:		if_false __t51 goto 316;
315:		exit_out_of_bound
316:		__t50 = 3 * 8;
317:		__t50 = __t50 + 8;
318:		__t50 = __t49 + __t50;
319:		__t53 = *(__t50);
320:		push_param __t53;
321:		stack_pointer +xxx
322:		call Parent@ret_grand_parent, 1;
323:		stack_pointer -xxx
324:		__t54 = return_value;
325:		__t55 = __t54;
326:		__t56 = *(__t55);
327:		__t57 = 1 >= __t56;
328:		if_false __t57 goto 330;
329:		exit_out_of_bound
330:		__t56 = 1 * 8;
331:		__t56 = __t56 + 8;
332:		__t56 = __t55 + __t56;
333:		__t59 = *(__t56);
334:		push_param __t59;
335:		push_param main@c;
336:		stack_pointer +xxx
337:		call Child@ret_parent, 1;
338:		stack_pointer -xxx
339:		__t60 = return_value;
340:		__t61 = __t60;
341:		__t62 = *(__t61);
342:		__t63 = 9 >= __t62;
343:		if_false __t63 goto 345;
344:		exit_out_of_bound
345:		__t62 = 9 * 8;
346:		__t62 = __t62 + 8;
347:		__t62 = __t61 + __t62;
348:		__t66 = *(__t62);
349:		__t65 = __t66 + 8;
350:		__t67 = *(__t65);
351:		push_param __t67;
352:		stack_pointer +xxx
353:		call GrandParent@show, 2;
354:		stack_pointer -xxx
355:		__t68 = return_value;
356:		push_param __t68;
357:		stack_pointer +xxx
358:		call print, 1;
359:		stack_pointer -xxx
360:		none type function call ends
361:		push_param main@c;
362:		stack_pointer +xxx
363:		call Child@display, 1;
364:		stack_pointer -xxx
365:		none type function call ends
366:end_func

367:program start: 
368:		stack_pointer +xxx
369:		call main, 0;
370:		stack_pointer -xxx
371:		none type function call ends
